---

- step:
    name: build
#    image: neomatrix369/dl4j-mnist-single-layer:v0.5
    image: gregsi/docker-deeplearning4j-ui
    command:
      - mvn package
      - ls -lash
      - echo "~~~ Copying the build jar file into ${VH_OUTPUTS_DIR}"
      - cp target/dl4j-sentiment-example-1.0.0-jar-with-dependencies.jar ${VH_OUTPUTS_DIR}/
      - ls -lash ${VH_OUTPUTS_DIR}
    environment: aws-eu-west-1-t3-large

- step:
    name: download Google Word Vectors, palabra
    image: gregsi/docker-deeplearning4j-ui
    command:
      - echo "downloading dataset"
      - pwd
      - ls -lash ${VH_INPUTS_DIR}/dataset/
      - cp ${VH_INPUTS_DIR}/dataset/GoogleNews-vectors-negative300.bin.gz ${VH_OUTPUTS_DIR}/
#      - cp ${VH_INPUTS_DIR}/dataset/default-blog-entry-background.png ${VH_OUTPUTS_DIR}/
      - ls -lash ${VH_OUTPUTS_DIR}/
    inputs:
      - name: dataset
#        default: http://onebeartoe.org/images/default-blog-entry-background.png
# Thanks  wm_eddie for the download link for the word vectors; from StackOverflow comment from Feb 18 at 9:24 (https://stackoverflow.com/a/49610274/803890)
        default: https://deeplearning4jblob.blob.core.windows.net/resources/wordvectors/GoogleNews-vectors-negative300.bin.gz
        description: this is the dataset needed to train the model
    environment: aws-eu-west-1-t3-large

- step:
    name: train
    image: gregsi/docker-deeplearning4j-ui
    command:
        - ls -lah ${VH_INPUTS_DIR}/dataset
        - ls -lah ${VH_INPUTS_DIR}/target
        - cp ${VH_INPUTS_DIR}/target/dl4j-sentiment-example-1.0.0-jar-with-dependencies.jar .
        - ls -lash
        - java -Dorg.bytedeco.javacpp.maxbytes=10G -Dorg.bytedeco.javacpp.maxphysicalbytes=12G -jar dl4j-sentiment-example-1.0.0-jar-with-dependencies.jar ${VH_INPUTS_DIR}/dataset/GoogleNews-vectors-negative300.bin.gz
#        - java -jar dl4j-sentiment-example-1.0.0-jar-with-dependencies.jar ${VH_INPUTS_DIR}/dataset/default-blog-entry-background.png
        - ls -lash
        - cp trained-model.zip ${VH_OUTPUTS_DIR}/
        - ls -lash ${VH_OUTPUTS_DIR}
    inputs:
      - name: target
        description: DL4J Java app file (jar) generated in the build step
      - name: dataset
        description: this is the dataset needed to train the model
    environment: aws-eu-west-1-t3-xlarge

- step:
    name: evaluate
    image: gregsi/docker-deeplearning4j-ui
    command:
        - ls -lah ${VH_INPUTS_DIR}/trained-model
        - ls -lah ${VH_INPUTS_DIR}/target
        - cp ${VH_INPUTS_DIR}/target/dl4j-sentiment-example-1.0.0-jar-with-dependencies.jar .
        - ls -lash
        - java -Dorg.bytedeco.javacpp.maxbytes=10G -Dorg.bytedeco.javacpp.maxphysicalbytes=12G -cp dl4j-sentiment-example-1.0.0-jar-with-dependencies.jar org.deeplearning4j.examples.recurrent.word2vecsentiment.Word2VecSentimentRnnEvaluate ${VH_INPUTS_DIR}/trained-model/trained-model.zip ${VH_INPUTS_DIR}/dataset/GoogleNews-vectors-negative300.bin.gz
    inputs:
      - name: target
        description: DL4J Java app file (jar) generated in the build step
      - name: dataset
        description: this is the dataset needed to train the model
      - name: trained-model
        description: this is the output file from the 'train' step 
      - name: dataset
        description: this is the dataset needed to train the model        
    environment: aws-eu-west-1-t3-xlarge
